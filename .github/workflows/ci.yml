name: CI

on:
    push:
        branches: [ "master" ]
    pull_request:
        branches: [ "master" ]

jobs:
    checks:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_USER: app
                    POSTGRES_PASSWORD: app_password
                    POSTGRES_DB: test_db
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd="pg_isready -U app -d test_db"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

        env:
            DATABASE_URL: ${{ secrets.DATABASE_URL }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.3'
                  extensions: mbstring, intl, pdo_pgsql, pgsql, redis
                  coverage: xdebug

            - name: Get Composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache Composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --no-progress --no-interaction --prefer-dist

            - name: Run PHP-CS-Fixer
              run: vendor/bin/php-cs-fixer fix --dry-run --allow-risky=yes --diff --verbose

            - name: Run PHPStan
              run: vendor/bin/phpstan analyse --memory-limit=1G

            - name: Run PHPUnit with coverage
              run: vendor/bin/phpunit tests --coverage-clover=coverage.xml --log-junit=phpunit-report.xml
